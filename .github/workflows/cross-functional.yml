# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Cross functional automation
env:
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  SCREENER_API_KEY: ${{ secrets.SCREENER_API_KEY }}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  desktop_tests:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Desktop tests
      run: mvn test -pl training-sessions/ci.pipeline -Dtest=DesktopTests
  emusim_tests:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Emusim tests
      run: mvn test -pl training-sessions/ci.pipeline -Dtest=EmusimWebAppTests
  rdc_tests:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Real device tests
      run: mvn test -pl training-sessions/ci.pipeline -Dtest=RDCTests
  visual_tests:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cross platform visual tests
      run: mvn test -pl training-sessions/ci.pipeline -Dtest=VisualCrossPlatformTests
